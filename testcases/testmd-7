
(* shows we are pushing and popping off the stack with temp vars *)
program test;

class EE
BEGIN
VAR
    id : integer;
    next : EE;
END


class test
BEGIN   
VAR
    counter, aa, test, oo  : integer;
    linkedListcurrent, linkedListhead, tmp : EE;
    temp : boolean;
FUNCTION test;
BEGIN
    oo := 3;
    aa := 2;
    aa := oo + 1 * (aa - (3 MOD 2)); 
    print aa; (* aa = 4 *)

    aa := 4 * aa + (oo/ 1) - 1;
    print aa; (* aa = 18 *)


    while counter < 200 DO
    BEGIN
        counter := counter + aa * 1 + 3 * oo - ( oo MOD 2) + 21;
        print counter; (* 47, 97, 150, 213 *)
        if (counter MOD 2) = 0 THEN
        BEGIN
            oo := oo * 2 + 3 - oo * 1;
            print oo (* oo = 6 *)
        END
        ELSE
        BEGIN
            aa := aa * 2 + 3 - aa * 1;
            print aa; (* aa = 21, 24, 27 *)
            if counter > 200 THEN
            BEGIN
                while aa < 200 DO
                BEGIN
                    if aa > 100 THEN
                    BEGIN
                        test := test * 1 + oo * 6;
                        print test
                    END
                    ELSE
                    BEGIN
                        test := 0;
                        print test
                    END;
                    aa := aa + (oo * 6) + (aa - 7);
                    print aa
                END

            END
            ELSE
                counter := counter * 1 

        END 
    END

END

END
.
